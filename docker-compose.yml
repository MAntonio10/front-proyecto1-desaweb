version: '3.8'

services:
  # Base de datos SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: basketball-sqlserver
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${SA_PASSWORD}
      MSSQL_PID: ${MSSQL_PID}
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./sqlserver/init:/docker-entrypoint-initdb.d
    networks:
      - basketball-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend .NET (descomenta cuando tengas la imagen lista)
  # backend:
  #   image: ${BACKEND_IMAGE}
  #   container_name: basketball-backend
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
  #     ConnectionStrings__DefaultConnection: "Server=${DB_SERVER},${DB_PORT};Database=${DB_NAME};User Id=${DB_USER};Password=${SA_PASSWORD};TrustServerCertificate=True;"
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     sqlserver:
  #       condition: service_healthy
  #   networks:
  #     - basketball-network
  #   restart: unless-stopped

  # Frontend Angular
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: basketball-frontend
    ports:
      - "4200:80"
    # depends_on:
    #   - backend
    networks:
      - basketball-network
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local

networks:
  basketball-network:
    driver: bridge
